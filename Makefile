# Alternative GNU Make project makefile autogenerated by Premake

ifndef config
  config=debug_osx
endif

ifndef verbose
  SILENT = @
endif

.PHONY: clean prebuild

SHELLTYPE := posix
ifeq (.exe,$(findstring .exe,$(ComSpec)))
	SHELLTYPE := msdos
endif

# Configurations
# #############################################

ifeq ($(origin CC), default)
  CC = clang
endif
ifeq ($(origin CXX), default)
  CXX = clang++
endif
ifeq ($(origin AR), default)
  AR = ar
endif
DEFINES +=
INCLUDES += -Iinclude -IDependencies/Libft
FORCE_INCLUDE +=
ALL_CPPFLAGS += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -Wall -Wextra -std=c89
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -Wall -Wextra
ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
LIBS +=
LDDEPS +=
ALL_LDFLAGS += $(LDFLAGS) -m64
LINKCMD = $(AR) -rcs "$@" $(OBJECTS)
define PREBUILDCMDS
endef
define PRELINKCMDS
endef
define POSTBUILDCMDS
endef

ifeq ($(config),debug_osx)
TARGETDIR = bin/osx/Debug
TARGET = $(TARGETDIR)/libft_printf.a
OBJDIR = obj/osx/Debug

else ifeq ($(config),debug_win64)
TARGETDIR = bin/Win64/Debug
TARGET = $(TARGETDIR)/libft_printf.a
OBJDIR = obj/Win64/Debug

else ifeq ($(config),release_osx)
TARGETDIR = bin/osx/Release
TARGET = $(TARGETDIR)/libft_printf.a
OBJDIR = obj/osx/Release

else ifeq ($(config),release_win64)
TARGETDIR = bin/Win64/Release
TARGET = $(TARGETDIR)/libft_printf.a
OBJDIR = obj/Win64/Release

else ifeq ($(config),distribution_osx)
TARGETDIR = bin/osx/Distribution
TARGET = $(TARGETDIR)/libft_printf.a
OBJDIR = obj/osx/Distribution

else ifeq ($(config),distribution_win64)
TARGETDIR = bin/Win64/Distribution
TARGET = $(TARGETDIR)/libft_printf.a
OBJDIR = obj/Win64/Distribution

endif

# Per File Configurations
# #############################################


# File sets
# #############################################

GENERATED :=
OBJECTS :=

GENERATED += $(OBJDIR)/debug_utils.o
GENERATED += $(OBJDIR)/dispatcher.o
GENERATED += $(OBJDIR)/format_char.o
GENERATED += $(OBJDIR)/format_info.o
GENERATED += $(OBJDIR)/format_info_utils.o
GENERATED += $(OBJDIR)/format_sint.o
GENERATED += $(OBJDIR)/format_specifier.o
GENERATED += $(OBJDIR)/format_string.o
GENERATED += $(OBJDIR)/ft_printf.o
GENERATED += $(OBJDIR)/ft_printf_utils.o
GENERATED += $(OBJDIR)/main.o
GENERATED += $(OBJDIR)/putchr.o
GENERATED += $(OBJDIR)/putnumber.o
GENERATED += $(OBJDIR)/putstr.o
OBJECTS += $(OBJDIR)/debug_utils.o
OBJECTS += $(OBJDIR)/dispatcher.o
OBJECTS += $(OBJDIR)/format_char.o
OBJECTS += $(OBJDIR)/format_info.o
OBJECTS += $(OBJDIR)/format_info_utils.o
OBJECTS += $(OBJDIR)/format_sint.o
OBJECTS += $(OBJDIR)/format_specifier.o
OBJECTS += $(OBJDIR)/format_string.o
OBJECTS += $(OBJDIR)/ft_printf.o
OBJECTS += $(OBJDIR)/ft_printf_utils.o
OBJECTS += $(OBJDIR)/main.o
OBJECTS += $(OBJDIR)/putchr.o
OBJECTS += $(OBJDIR)/putnumber.o
OBJECTS += $(OBJDIR)/putstr.o

# Rules
# #############################################

all: $(TARGET)
	@:

$(TARGET): $(GENERATED) $(OBJECTS) $(LDDEPS) | $(TARGETDIR)
	$(PRELINKCMDS)
	@echo Linking ft_printf
	$(SILENT) $(LINKCMD)
	$(POSTBUILDCMDS)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(TARGETDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(TARGETDIR))
endif

$(OBJDIR):
	@echo Creating $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(OBJDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(OBJDIR))
endif

clean:
	@echo Cleaning ft_printf
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
	$(SILENT) rm -rf $(GENERATED)
	$(SILENT) rm -rf $(OBJDIR)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
	$(SILENT) if exist $(subst /,\\,$(GENERATED)) rmdir /s /q $(subst /,\\,$(GENERATED))
	$(SILENT) if exist $(subst /,\\,$(OBJDIR)) rmdir /s /q $(subst /,\\,$(OBJDIR))
endif

prebuild: | $(OBJDIR)
	$(PREBUILDCMDS)

ifneq (,$(PCH))
$(OBJECTS): $(GCH) | $(PCH_PLACEHOLDER)
$(GCH): $(PCH) | prebuild
	@echo $(notdir $<)
	$(SILENT) $(CC) -x c-header $(ALL_CFLAGS) -o "$@" -MF "$(@:%.gch=%.d)" -c "$<"
$(PCH_PLACEHOLDER): $(GCH) | $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) touch "$@"
else
	$(SILENT) echo $null >> "$@"
endif
else
$(OBJECTS): | prebuild
endif


# File Rules
# #############################################

$(OBJDIR)/debug_utils.o: src/debug_utils.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/dispatcher.o: src/dispatcher.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/format_char.o: src/format/format_char.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/format_sint.o: src/format/format_sint.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/format_specifier.o: src/format/format_specifier.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/format_string.o: src/format/format_string.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/format_info.o: src/format_info.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/format_info_utils.o: src/format_info_utils.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/ft_printf.o: src/ft_printf.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/ft_printf_utils.o: src/ft_printf_utils.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/main.o: src/main.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/putchr.o: src/utils/putchr.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/putnumber.o: src/utils/putnumber.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/putstr.o: src/utils/putstr.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"

-include $(OBJECTS:%.o=%.d)
ifneq (,$(PCH))
  -include $(PCH_PLACEHOLDER).d
endif